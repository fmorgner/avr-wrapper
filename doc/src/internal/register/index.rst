********************************************
AVR Special Function Register Infrastructure
********************************************

This chapter introduces the **AVR Special Function Register API**. This API
provides access to the Special Function Registers of an AVR microcontroller.
These registers can be used for controlling various interfaces of an AVR
controller.


Usage Example
=============

The following code blocks demonstrates how to use the types described in this
chapter to access a Special Function Register on an AVR microcontroller::
 
  #include "avr/internal/registers.hpp"

  struct some_device {
    struct gpio_ports {
      static auto constexpr B = avr::internal::registers::io_register_8<0x03>;
    };
  };

  int main() {
    auto constexpr & portB = some_device::gpio_ports::B;

    if(portB.bit<3>.get()) {
      portB.bit<7>.set();
    } else {
      portB.bit<7>.clear();
    }
  }

The machine code generated by the above C++ code demonstrates that there is no
overhead incurred by the wrappers. At the same time, all accesses to bits and
registers are checked at compile time

.. code-block:: objdump

  00000080 <main>:
    80:	1b 9b       	sbis	0x03, 3	; 3
    82:	04 c0       	rjmp	.+8      	; 0x8c <main+0xc>
    84:	1f 9a       	sbi	0x03, 7	; 3
    86:	90 e0       	ldi	r25, 0x00	; 0
    88:	80 e0       	ldi	r24, 0x00	; 0
    8a:	08 95       	ret
    8c:	1f 98       	cbi	0x03, 7	; 3
    8e:	fb cf       	rjmp	.-10     	; 0x86 <main+0x6>

Base Type
=========

.. doxygenclass:: avr::internal::registers::special_function_register

Full Register Access
--------------------

.. doxygenfunction:: avr::internal::registers::special_function_register::set
.. doxygenfunction:: avr::internal::registers::special_function_register::get

Bitwise Register Access
-----------------------

.. doxygenvariable:: avr::internal::registers::special_function_register::bit
.. doxygenstruct:: avr::internal::registers::special_function_register::bit_wrapper
  :members:

Specialized Types and Aliases
=============================

.. doxygenstruct:: avr::internal::registers::io_register
.. doxygenvariable:: avr::internal::registers::io_register_8
